{"ast":null,"code":"var _jsxFileName = \"D:\\\\User Task\\\\usertask\\\\src\\\\component\\\\Addtask.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTask } from \"../redux/TaskSlice\";\nimport './Addtask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Addtask = () => {\n  _s();\n  const [title, settitle] = useState('');\n  const dispatch = useDispatch();\n  const userId = localStorage.getItem('userId');\n  console.log(\"Current userId from localStorage:\", userId);\n  const handlesubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) return;\n    try {\n      const response = await axios.post('http://localhost:8000/task/addtask', {\n        title,\n        completed: false,\n        userId\n      });\n      dispatch(addTask(response.data.task));\n      console.log(\"task add by api\", response.data);\n    } catch (error) {\n      console.log(\"error in task add\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addtask\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => settitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handlesubmit,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Addtask, \"ZRfZYJw+I/CApNiSdqE35X05oLU=\", false, function () {\n  return [useDispatch];\n});\n_c = Addtask;\nexport default Addtask;\nvar _c;\n$RefreshReg$(_c, \"Addtask\");","map":{"version":3,"names":["axios","React","useState","useDispatch","useSelector","addTask","jsxDEV","_jsxDEV","Addtask","_s","title","settitle","dispatch","userId","localStorage","getItem","console","log","handlesubmit","e","preventDefault","trim","response","post","completed","data","task","error","className","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/User Task/usertask/src/component/Addtask.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { addTask } from \"../redux/TaskSlice\";\r\nimport './Addtask.css'\r\n\r\nconst Addtask = () =>{\r\n    const [title,settitle] = useState('')\r\n    const dispatch= useDispatch()\r\n    const userId = localStorage.getItem('userId'); \r\n\r\n    console.log(\"Current userId from localStorage:\", userId); \r\n\r\n\r\n    const handlesubmit =async(e)=>{\r\n        e.preventDefault();\r\n    \r\n        if(!title.trim()) return;\r\n            try {\r\n                const response = await axios.post('http://localhost:8000/task/addtask',{\r\n                    title,\r\n                    completed:false,\r\n                    userId\r\n                })\r\n                dispatch(addTask(response.data.task))\r\n                console.log(\"task add by api\",response.data)\r\n            } catch (error) {\r\n                console.log(\"error in task add\",error)\r\n            }\r\n        \r\n\r\n\r\n    }\r\n    return(\r\n\r\n        <div className=\"addtask\">\r\n            \r\n            <input type=\"text\" value={title} onChange={(e)=>settitle(e.target.value)} />\r\n            <button type=\"submit\" onClick={handlesubmit} >Add Task</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Addtask"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,OAAO,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAMU,QAAQ,GAAET,WAAW,CAAC,CAAC;EAC7B,MAAMU,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,MAAM,CAAC;EAGxD,MAAMK,YAAY,GAAE,MAAMC,CAAC,IAAG;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAG,CAACV,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;IACd,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,oCAAoC,EAAC;QACnEb,KAAK;QACLc,SAAS,EAAC,KAAK;QACfX;MACJ,CAAC,CAAC;MACFD,QAAQ,CAACP,OAAO,CAACiB,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC;MACrCV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACK,QAAQ,CAACG,IAAI,CAAC;IAChD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACU,KAAK,CAAC;IAC1C;EAIR,CAAC;EACD,oBAEIpB,OAAA;IAAKqB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAEpBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAErB,KAAM;MAACsB,QAAQ,EAAGb,CAAC,IAAGR,QAAQ,CAACQ,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5E9B,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACQ,OAAO,EAAEpB,YAAa;MAAAW,QAAA,EAAE;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd,CAAC;AAAA5B,EAAA,CAnCKD,OAAO;EAAA,QAEOL,WAAW;AAAA;AAAAoC,EAAA,GAFzB/B,OAAO;AAoCb,eAAeA,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}